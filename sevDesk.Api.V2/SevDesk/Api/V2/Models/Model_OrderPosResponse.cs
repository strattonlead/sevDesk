// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace SevDesk.Api.V2.Models
{
    /// <summary>
    /// Order position model
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class Model_OrderPosResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Date of order position creation</summary>
        public DateTimeOffset? Create { get; private set; }
        /// <summary>An optional discount of the position.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Discount { get; set; }
#nullable restore
#else
        public string Discount { get; set; }
#endif
        /// <summary>The order position id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>Name of the article/part.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The order position object name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ObjectName { get; private set; }
#nullable restore
#else
        public string ObjectName { get; private set; }
#endif
        /// <summary>Defines if the position is optional.</summary>
        public bool? Optional { get; set; }
        /// <summary>The order to which the position belongs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_order? Order { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_order Order { get; set; }
#endif
        /// <summary>Part from your inventory which is used in the position.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_part? Part { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_part Part { get; set; }
#endif
        /// <summary>Position number of your position. Can be used to order multiple positions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PositionNumber { get; set; }
#nullable restore
#else
        public string PositionNumber { get; set; }
#endif
        /// <summary>Price of the article/part. Is either gross or net, depending on the sevdesk account setting.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Price { get; set; }
#nullable restore
#else
        public string Price { get; set; }
#endif
        /// <summary>Gross price of the part</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PriceGross { get; set; }
#nullable restore
#else
        public string PriceGross { get; set; }
#endif
        /// <summary>Net price of the part</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PriceNet { get; private set; }
#nullable restore
#else
        public string PriceNet { get; private set; }
#endif
        /// <summary>Tax on the price of the part</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PriceTax { get; set; }
#nullable restore
#else
        public string PriceTax { get; set; }
#endif
        /// <summary>Quantity of the article/part</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Quantity { get; set; }
#nullable restore
#else
        public string Quantity { get; set; }
#endif
        /// <summary>Client to which order position belongs. Will be filled automatically</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_sevClient? SevClient { get; private set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_sevClient SevClient { get; private set; }
#endif
        /// <summary>Discount sum of the position</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SumDiscount { get; private set; }
#nullable restore
#else
        public string SumDiscount { get; private set; }
#endif
        /// <summary>Tax rate of the position.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxRate { get; set; }
#nullable restore
#else
        public string TaxRate { get; set; }
#endif
        /// <summary>A text describing your position.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>The unit in which the positions part is measured</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_unity? Unity { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_OrderPosResponse_unity Unity { get; set; }
#endif
        /// <summary>Date of last order position update</summary>
        public DateTimeOffset? Update { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Models.Model_OrderPosResponse"/> and sets the default values.
        /// </summary>
        public Model_OrderPosResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Models.Model_OrderPosResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SevDesk.Api.V2.Models.Model_OrderPosResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SevDesk.Api.V2.Models.Model_OrderPosResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "create", n => { Create = n.GetDateTimeOffsetValue(); } },
                { "discount", n => { Discount = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "objectName", n => { ObjectName = n.GetStringValue(); } },
                { "optional", n => { Optional = n.GetBoolValue(); } },
                { "order", n => { Order = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_order>(global::SevDesk.Api.V2.Models.Model_OrderPosResponse_order.CreateFromDiscriminatorValue); } },
                { "part", n => { Part = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_part>(global::SevDesk.Api.V2.Models.Model_OrderPosResponse_part.CreateFromDiscriminatorValue); } },
                { "positionNumber", n => { PositionNumber = n.GetStringValue(); } },
                { "price", n => { Price = n.GetStringValue(); } },
                { "priceGross", n => { PriceGross = n.GetStringValue(); } },
                { "priceNet", n => { PriceNet = n.GetStringValue(); } },
                { "priceTax", n => { PriceTax = n.GetStringValue(); } },
                { "quantity", n => { Quantity = n.GetStringValue(); } },
                { "sevClient", n => { SevClient = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_sevClient>(global::SevDesk.Api.V2.Models.Model_OrderPosResponse_sevClient.CreateFromDiscriminatorValue); } },
                { "sumDiscount", n => { SumDiscount = n.GetStringValue(); } },
                { "taxRate", n => { TaxRate = n.GetStringValue(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "unity", n => { Unity = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_unity>(global::SevDesk.Api.V2.Models.Model_OrderPosResponse_unity.CreateFromDiscriminatorValue); } },
                { "update", n => { Update = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("discount", Discount);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("optional", Optional);
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_order>("order", Order);
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_part>("part", Part);
            writer.WriteStringValue("positionNumber", PositionNumber);
            writer.WriteStringValue("price", Price);
            writer.WriteStringValue("priceGross", PriceGross);
            writer.WriteStringValue("priceTax", PriceTax);
            writer.WriteStringValue("quantity", Quantity);
            writer.WriteStringValue("taxRate", TaxRate);
            writer.WriteStringValue("text", Text);
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_OrderPosResponse_unity>("unity", Unity);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
