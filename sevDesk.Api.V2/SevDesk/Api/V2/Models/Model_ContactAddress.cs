// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace SevDesk.Api.V2.Models
{
    /// <summary>
    /// ContactAddress model
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class Model_ContactAddress : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Category of the contact address.&lt;br&gt;     For all categories, send a GET to /Category?objectType=ContactAddress.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_category? Category { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_category Category { get; set; }
#endif
        /// <summary>City name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The contact to which this contact address belongs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_contact? Contact { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_contact Contact { get; set; }
#endif
        /// <summary>Country of the contact address.&lt;br&gt;    For all countries, send a GET to /StaticCountry</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_country? Country { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_country Country { get; set; }
#endif
        /// <summary>Date of contact address creation</summary>
        public DateTimeOffset? Create { get; private set; }
        /// <summary>The contact address id</summary>
        public int? Id { get; private set; }
        /// <summary>Name in address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Second name in address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name2 { get; set; }
#nullable restore
#else
        public string Name2 { get; set; }
#endif
        /// <summary>Third name in address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name3 { get; set; }
#nullable restore
#else
        public string Name3 { get; set; }
#endif
        /// <summary>Fourth name in address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name4 { get; set; }
#nullable restore
#else
        public string Name4 { get; set; }
#endif
        /// <summary>The contact address object name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ObjectName { get; private set; }
#nullable restore
#else
        public string ObjectName { get; private set; }
#endif
        /// <summary>Client to which contact address belongs. Will be filled automatically</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_sevClient? SevClient { get; private set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.Models.Model_ContactAddress_sevClient SevClient { get; private set; }
#endif
        /// <summary>Street name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Street { get; set; }
#nullable restore
#else
        public string Street { get; set; }
#endif
        /// <summary>Date of last contact address update</summary>
        public DateTimeOffset? Update { get; private set; }
        /// <summary>Zib code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zip { get; set; }
#nullable restore
#else
        public string Zip { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Models.Model_ContactAddress"/> and sets the default values.
        /// </summary>
        public Model_ContactAddress()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Models.Model_ContactAddress"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SevDesk.Api.V2.Models.Model_ContactAddress CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SevDesk.Api.V2.Models.Model_ContactAddress();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category", n => { Category = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_category>(global::SevDesk.Api.V2.Models.Model_ContactAddress_category.CreateFromDiscriminatorValue); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "contact", n => { Contact = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_contact>(global::SevDesk.Api.V2.Models.Model_ContactAddress_contact.CreateFromDiscriminatorValue); } },
                { "country", n => { Country = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_country>(global::SevDesk.Api.V2.Models.Model_ContactAddress_country.CreateFromDiscriminatorValue); } },
                { "create", n => { Create = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "name2", n => { Name2 = n.GetStringValue(); } },
                { "name3", n => { Name3 = n.GetStringValue(); } },
                { "name4", n => { Name4 = n.GetStringValue(); } },
                { "objectName", n => { ObjectName = n.GetStringValue(); } },
                { "sevClient", n => { SevClient = n.GetObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_sevClient>(global::SevDesk.Api.V2.Models.Model_ContactAddress_sevClient.CreateFromDiscriminatorValue); } },
                { "street", n => { Street = n.GetStringValue(); } },
                { "update", n => { Update = n.GetDateTimeOffsetValue(); } },
                { "zip", n => { Zip = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_category>("category", Category);
            writer.WriteStringValue("city", City);
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_contact>("contact", Contact);
            writer.WriteObjectValue<global::SevDesk.Api.V2.Models.Model_ContactAddress_country>("country", Country);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("name2", Name2);
            writer.WriteStringValue("name3", Name3);
            writer.WriteStringValue("name4", Name4);
            writer.WriteStringValue("street", Street);
            writer.WriteStringValue("zip", Zip);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
