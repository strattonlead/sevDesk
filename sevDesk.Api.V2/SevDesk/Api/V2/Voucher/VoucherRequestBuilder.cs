// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using SevDesk.Api.V2.Voucher.Factory;
using SevDesk.Api.V2.Voucher.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace SevDesk.Api.V2.Voucher
{
    /// <summary>
    /// Builds and executes requests for operations under \Voucher
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class VoucherRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The Factory property</summary>
        public global::SevDesk.Api.V2.Voucher.Factory.FactoryRequestBuilder Factory
        {
            get => new global::SevDesk.Api.V2.Voucher.Factory.FactoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the sevDesk.Api.V2.Voucher.item collection</summary>
        /// <param name="position">ID of voucher to return</param>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder"/></returns>
        public global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder this[int position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("voucherId", position);
                return new global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the sevDesk.Api.V2.Voucher.item collection</summary>
        /// <param name="position">ID of voucher to return</param>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("voucherId", position);
                return new global::SevDesk.Api.V2.Voucher.Item.WithVoucherItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VoucherRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Voucher{?contact%5Bid%5D,contact%5BobjectName%5D,creditDebit*,descriptionLike*,endDate*,startDate*,status*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VoucherRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Voucher{?contact%5Bid%5D,contact%5BobjectName%5D,creditDebit*,descriptionLike*,endDate*,startDate*,status*}", rawUrl)
        {
        }
        /// <summary>
        /// There are a multitude of parameter which can be used to filter. A few of them are attached but    for a complete list please check out &lt;a href=&apos;#tag/Voucher/How-to-filter-for-certain-vouchers&apos;&gt;this&lt;/a&gt; list
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Voucher.VoucherGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::SevDesk.Api.V2.Voucher.VoucherGetResponse?> GetAsVoucherGetResponseAsync(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::SevDesk.Api.V2.Voucher.VoucherGetResponse> GetAsVoucherGetResponseAsync(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::SevDesk.Api.V2.Voucher.VoucherGetResponse>(requestInfo, global::SevDesk.Api.V2.Voucher.VoucherGetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// There are a multitude of parameter which can be used to filter. A few of them are attached but    for a complete list please check out &lt;a href=&apos;#tag/Voucher/How-to-filter-for-certain-vouchers&apos;&gt;this&lt;/a&gt; list
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Voucher.VoucherResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsVoucherGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::SevDesk.Api.V2.Voucher.VoucherResponse?> GetAsync(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::SevDesk.Api.V2.Voucher.VoucherResponse> GetAsync(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::SevDesk.Api.V2.Voucher.VoucherResponse>(requestInfo, global::SevDesk.Api.V2.Voucher.VoucherResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// There are a multitude of parameter which can be used to filter. A few of them are attached but    for a complete list please check out &lt;a href=&apos;#tag/Voucher/How-to-filter-for-certain-vouchers&apos;&gt;this&lt;/a&gt; list
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder WithUrl(string rawUrl)
        {
            return new global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// There are a multitude of parameter which can be used to filter. A few of them are attached but    for a complete list please check out &lt;a href=&apos;#tag/Voucher/How-to-filter-for-certain-vouchers&apos;&gt;this&lt;/a&gt; list
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class VoucherRequestBuilderGetQueryParameters 
        {
            /// <summary>Retrieve all vouchers with this contact. Must be provided with contact[objectName]</summary>
            [QueryParameter("contact%5Bid%5D")]
            public int? Contactid { get; set; }
            /// <summary>Only required if contact[id] was provided. &apos;Contact&apos; should be used as value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("contact%5BobjectName%5D")]
            public string? ContactobjectName { get; set; }
#nullable restore
#else
            [QueryParameter("contact%5BobjectName%5D")]
            public string ContactobjectName { get; set; }
#endif
            /// <summary>Define if you only want credit or debit vouchers.</summary>
            [Obsolete("This property is deprecated, use CreditDebitAsGetCreditDebitQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("creditDebit")]
            public string? CreditDebit { get; set; }
#nullable restore
#else
            [QueryParameter("creditDebit")]
            public string CreditDebit { get; set; }
#endif
            /// <summary>Define if you only want credit or debit vouchers.</summary>
            [QueryParameter("creditDebit")]
            public global::SevDesk.Api.V2.Voucher.GetCreditDebitQueryParameterType? CreditDebitAsGetCreditDebitQueryParameterType { get; set; }
            /// <summary>Retrieve all vouchers with a description like this.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("descriptionLike")]
            public string? DescriptionLike { get; set; }
#nullable restore
#else
            [QueryParameter("descriptionLike")]
            public string DescriptionLike { get; set; }
#endif
            /// <summary>Retrieve all vouchers with a date equal or lower</summary>
            [QueryParameter("endDate")]
            public int? EndDate { get; set; }
            /// <summary>Retrieve all vouchers with a date equal or higher</summary>
            [QueryParameter("startDate")]
            public int? StartDate { get; set; }
            /// <summary>Status of the vouchers to retrieve.</summary>
            [QueryParameter("status")]
            public double? Status { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class VoucherRequestBuilderGetRequestConfiguration : RequestConfiguration<global::SevDesk.Api.V2.Voucher.VoucherRequestBuilder.VoucherRequestBuilderGetQueryParameters>
        {
        }
    }
}
