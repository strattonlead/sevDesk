// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using SevDesk.Api.V2.Export.ContactListCsv;
using SevDesk.Api.V2.Export.CreditNoteCsv;
using SevDesk.Api.V2.Export.DatevCSV;
using SevDesk.Api.V2.Export.InvoiceCsv;
using SevDesk.Api.V2.Export.InvoiceZip;
using SevDesk.Api.V2.Export.TransactionsCsv;
using SevDesk.Api.V2.Export.VoucherListCsv;
using SevDesk.Api.V2.Export.VoucherZip;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace SevDesk.Api.V2.Export
{
    /// <summary>
    /// Builds and executes requests for operations under \Export
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class ExportRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The contactListCsv property</summary>
        public global::SevDesk.Api.V2.Export.ContactListCsv.ContactListCsvRequestBuilder ContactListCsv
        {
            get => new global::SevDesk.Api.V2.Export.ContactListCsv.ContactListCsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The creditNoteCsv property</summary>
        public global::SevDesk.Api.V2.Export.CreditNoteCsv.CreditNoteCsvRequestBuilder CreditNoteCsv
        {
            get => new global::SevDesk.Api.V2.Export.CreditNoteCsv.CreditNoteCsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The datevCSV property</summary>
        public global::SevDesk.Api.V2.Export.DatevCSV.DatevCSVRequestBuilder DatevCSV
        {
            get => new global::SevDesk.Api.V2.Export.DatevCSV.DatevCSVRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoiceCsv property</summary>
        public global::SevDesk.Api.V2.Export.InvoiceCsv.InvoiceCsvRequestBuilder InvoiceCsv
        {
            get => new global::SevDesk.Api.V2.Export.InvoiceCsv.InvoiceCsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoiceZip property</summary>
        public global::SevDesk.Api.V2.Export.InvoiceZip.InvoiceZipRequestBuilder InvoiceZip
        {
            get => new global::SevDesk.Api.V2.Export.InvoiceZip.InvoiceZipRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transactionsCsv property</summary>
        public global::SevDesk.Api.V2.Export.TransactionsCsv.TransactionsCsvRequestBuilder TransactionsCsv
        {
            get => new global::SevDesk.Api.V2.Export.TransactionsCsv.TransactionsCsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The voucherListCsv property</summary>
        public global::SevDesk.Api.V2.Export.VoucherListCsv.VoucherListCsvRequestBuilder VoucherListCsv
        {
            get => new global::SevDesk.Api.V2.Export.VoucherListCsv.VoucherListCsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The voucherZip property</summary>
        public global::SevDesk.Api.V2.Export.VoucherZip.VoucherZipRequestBuilder VoucherZip
        {
            get => new global::SevDesk.Api.V2.Export.VoucherZip.VoucherZipRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Export.ExportRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ExportRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Export", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.Export.ExportRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ExportRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Export", rawUrl)
        {
        }
    }
}
