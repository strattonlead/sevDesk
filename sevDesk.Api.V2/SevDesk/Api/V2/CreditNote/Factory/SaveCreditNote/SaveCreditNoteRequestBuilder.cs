// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using SevDesk.Api.V2.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote
{
    /// <summary>
    /// Builds and executes requests for operations under \CreditNote\Factory\saveCreditNote
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class SaveCreditNoteRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote.SaveCreditNoteRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SaveCreditNoteRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/CreditNote/Factory/saveCreditNote", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote.SaveCreditNoteRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SaveCreditNoteRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/CreditNote/Factory/saveCreditNote", rawUrl)
        {
        }
        /// <summary>
        /// The list of parameters starts with the credit note array.&lt;br&gt; This array contains all required attributes for a complete credit note.&lt;br&gt; Most of the attributes are covered in the credit note attribute list, there are only two parameters standing out, namely &lt;b&gt;mapAll&lt;/b&gt; and &lt;b&gt;objectName&lt;/b&gt;.&lt;br&gt; These are just needed for our system and you always need to provide them.&lt;br&gt; The list of parameters then continues with the credit note position array.&lt;br&gt; With this array you have the possibility to add multiple positions at once.&lt;br&gt; In the example it only contains one position, again together with the parameters &lt;b&gt;mapAll&lt;/b&gt; and &lt;b&gt;objectName&lt;/b&gt;, however, you can add more credit note positions by extending the array.&lt;br&gt; So if you wanted to add another position, you would add the same list of parameters with an incremented array index of &quot;1&quot; instead of &quot;0&quot;.&lt;br&gt;&lt;br&gt; The list ends with the five parameters creditNotePosDelete, discountSave, discountDelete, takeDefaultAddress and forCashRegister.&lt;br&gt; They only play a minor role if you only want to create a credit note but we will shortly explain what they can do.&lt;br&gt; With creditNotePosDelete you have to option to delete credit note positions as this request can also be used to update credit notes.&lt;br&gt; Both discount parameters are deprecated and have no use for credit notes, however they need to be provided in case you want to use the following two parameters.&lt;br&gt; With takeDefaultAddress you can specify that the first address of the contact you are using for the credit note is taken for the credit note address attribute automatically, so you don&apos;t need to provide the address yourself.&lt;br&gt; Finally, the forCashRegister parameter needs to be set to &lt;b&gt;true&lt;/b&gt; if your credit note is to be booked on the cash register.&lt;br&gt; If you want to know more about these parameters, for example if you want to use this request to update credit notes, feel free to contact our support.&lt;br&gt; Finally, after covering all parameters, they only important information left, is that the order of the last five attributes always needs to be kept.&lt;br&gt; You will also always need to provide all of them, as otherwise the request won&apos;t work properly.
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.Models.SaveCreditNoteResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::SevDesk.Api.V2.Models.SaveCreditNoteResponse?> PostAsync(global::SevDesk.Api.V2.Models.SaveCreditNote body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::SevDesk.Api.V2.Models.SaveCreditNoteResponse> PostAsync(global::SevDesk.Api.V2.Models.SaveCreditNote body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::SevDesk.Api.V2.Models.SaveCreditNoteResponse>(requestInfo, global::SevDesk.Api.V2.Models.SaveCreditNoteResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The list of parameters starts with the credit note array.&lt;br&gt; This array contains all required attributes for a complete credit note.&lt;br&gt; Most of the attributes are covered in the credit note attribute list, there are only two parameters standing out, namely &lt;b&gt;mapAll&lt;/b&gt; and &lt;b&gt;objectName&lt;/b&gt;.&lt;br&gt; These are just needed for our system and you always need to provide them.&lt;br&gt; The list of parameters then continues with the credit note position array.&lt;br&gt; With this array you have the possibility to add multiple positions at once.&lt;br&gt; In the example it only contains one position, again together with the parameters &lt;b&gt;mapAll&lt;/b&gt; and &lt;b&gt;objectName&lt;/b&gt;, however, you can add more credit note positions by extending the array.&lt;br&gt; So if you wanted to add another position, you would add the same list of parameters with an incremented array index of &quot;1&quot; instead of &quot;0&quot;.&lt;br&gt;&lt;br&gt; The list ends with the five parameters creditNotePosDelete, discountSave, discountDelete, takeDefaultAddress and forCashRegister.&lt;br&gt; They only play a minor role if you only want to create a credit note but we will shortly explain what they can do.&lt;br&gt; With creditNotePosDelete you have to option to delete credit note positions as this request can also be used to update credit notes.&lt;br&gt; Both discount parameters are deprecated and have no use for credit notes, however they need to be provided in case you want to use the following two parameters.&lt;br&gt; With takeDefaultAddress you can specify that the first address of the contact you are using for the credit note is taken for the credit note address attribute automatically, so you don&apos;t need to provide the address yourself.&lt;br&gt; Finally, the forCashRegister parameter needs to be set to &lt;b&gt;true&lt;/b&gt; if your credit note is to be booked on the cash register.&lt;br&gt; If you want to know more about these parameters, for example if you want to use this request to update credit notes, feel free to contact our support.&lt;br&gt; Finally, after covering all parameters, they only important information left, is that the order of the last five attributes always needs to be kept.&lt;br&gt; You will also always need to provide all of them, as otherwise the request won&apos;t work properly.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::SevDesk.Api.V2.Models.SaveCreditNote body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::SevDesk.Api.V2.Models.SaveCreditNote body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote.SaveCreditNoteRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote.SaveCreditNoteRequestBuilder WithUrl(string rawUrl)
        {
            return new global::SevDesk.Api.V2.CreditNote.Factory.SaveCreditNote.SaveCreditNoteRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class SaveCreditNoteRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
