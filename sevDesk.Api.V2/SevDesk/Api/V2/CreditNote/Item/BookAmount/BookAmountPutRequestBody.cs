// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace SevDesk.Api.V2.CreditNote.Item.BookAmount
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    #pragma warning disable CS1591
    public partial class BookAmountPutRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Amount which should be booked. Can also be a partial amount.</summary>
        public double? Amount { get; set; }
        /// <summary>The check account on which should be booked.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccount? CheckAccount { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccount CheckAccount { get; set; }
#endif
        /// <summary>The check account transaction on which should be booked.&lt;br&gt;    The transaction will be linked to the credit note.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccountTransaction? CheckAccountTransaction { get; set; }
#nullable restore
#else
        public global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccountTransaction CheckAccountTransaction { get; set; }
#endif
        /// <summary>Determines if a feed is created for the booking process.</summary>
        public bool? CreateFeed { get; set; }
        /// <summary>The booking date. Most likely the current date.</summary>
        public int? Date { get; set; }
        /// <summary>Define a type for the booking.&lt;br&gt;    The following type abbreviations are available (abbreviation &lt;-&gt; meaning).&lt;br&gt;    &lt;ul&gt;    &lt;li&gt;N &lt;-&gt; Normal booking / partial booking&lt;/li&gt;    &lt;li&gt;CB &lt;-&gt; Reduced amount due to discount (skonto)&lt;/li&gt;    &lt;li&gt;CF &lt;-&gt; Reduced/Higher amount due to currency fluctuations (deprecated)&lt;/li&gt;    &lt;li&gt;O &lt;-&gt; Reduced/Higher amount due to other reasons&lt;/li&gt;    &lt;li&gt;OF &lt;-&gt; Higher amount due to reminder charges&lt;/li&gt;    &lt;li&gt;MTC &lt;-&gt; Reduced amount due to the monetary traffic costs&lt;/li&gt;    &lt;/ul&gt;</summary>
        public global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody"/> and sets the default values.
        /// </summary>
        public BookAmountPutRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "checkAccount", n => { CheckAccount = n.GetObjectValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccount>(global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccount.CreateFromDiscriminatorValue); } },
                { "checkAccountTransaction", n => { CheckAccountTransaction = n.GetObjectValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccountTransaction>(global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccountTransaction.CreateFromDiscriminatorValue); } },
                { "createFeed", n => { CreateFeed = n.GetBoolValue(); } },
                { "date", n => { Date = n.GetIntValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteObjectValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccount>("checkAccount", CheckAccount);
            writer.WriteObjectValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_checkAccountTransaction>("checkAccountTransaction", CheckAccountTransaction);
            writer.WriteBoolValue("createFeed", CreateFeed);
            writer.WriteIntValue("date", Date);
            writer.WriteEnumValue<global::SevDesk.Api.V2.CreditNote.Item.BookAmount.BookAmountPutRequestBody_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
